#!/bin/sh
# See README.mozilla for information about this script
# $Id$

#-- **
#   ** Change the following to an absolute path to 
#   ** see-shell or see-shell.static
#   ** 
SHELLPROG="@SHELLPROG@"
MOZDIR="@MOZDIR@"
CR="`echo | tr '\012' '\015'`"

ulimit -c 0
ulimit -t 600

#-- return true if the directory is suitable for tests
isok () {
    test "$d" != "e4x" -a -f "$d"/shell.js 
}

#-- return true if the test file is suitable
if test $# -eq 0; then
	istestok () { :; }
else
	# use $1 as a glob pattern to match against
	eval "istestok () { case \"\$1\" in $1) : ;; *) false ;; esac; }"
	shift
fi

if $SHELLPROG -V < /dev/null; then
	:
else
	echo "Cannot execute shell: $SHELLPROG" >&2
	exit 1
fi

if ! date | grep -w PST >/dev/null; then
	echo "** WARNING: Timezone is not US/Pacific - date tests may fail" >&2
fi

(
cd "$MOZDIR"

#-- scan for tests
echo 'scanning tests...' >&2
count=0
for d in *; do
    isok "$D" || continue
    for e in $d/*; do
	test -d $e || continue
        for i in $e/*.js; do
	    test -f "$i" || continue
	    istestok "$i" || continue
	    count=`expr $count + 1`
	done
    done
done

pos=0
failed=0
for d in *; do
    isok "$d" || continue
    arg="-f $d/shell.js"
    for e in $d/*; do
	earg="$arg"
	test -d $e || continue
	test -f "$e/shell.js" && earg="$arg -f $e/shell.js"
        for i in $e/*.js; do
	    test -f "$i" || continue
	    istestok "$i" || continue
	    pos=`expr $pos + 1`
	    echo -n "$pos of $count: $failed failed${CR}" >&2
	    echo ""
	    echo "** $pos $i **"
	    echo ""
	    if $SHELLPROG $earg -f $i 2>&1; then
	       case "$i" in 
		  *-n.js) 
		     echo "$i: FAILED! (should have raised exception)"
		     failed=`expr $failed + 1`
		      ;;
		  *)
		     ;;
	       esac
	    else
	       case "$i" in 
		   *-n.js) 
		     ;;
		   *) 
		     echo "$i: FAILED! exit code $?"
		     failed=`expr $failed + 1`
		     ;;
	       esac
	    fi
	done 
    done
done 
) | 
  tee $0.out | 
  awk '/^\*/     { name = $0;				\
  		   printed = 0; }			\
       /FAILED!/ { if (!printed) { 			\
                       printed = 1; 			\
		       print name; 			\
		       failed++; } 			\
                   print; }				\
       END       { print "\nTests failed:", failed; 		\
                   exit failed > 0 ? 1 : 0; }		\
       ' failed=0
